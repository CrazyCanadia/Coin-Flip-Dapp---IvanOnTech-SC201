{
  "contractName": "Proxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currentAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "LPTokenPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_BET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MIN_BET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SELF_DESTRUCT_TIMER",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "activeBets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "betsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blank",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentLPGen",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentTxPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "m_LP_tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "genNum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "LP_token_amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "m_userData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "account_balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bet_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "heads_or_tails",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "ticket_num",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "processingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "queryId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalLiabilities",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "userQueryId",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currentAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"LPTokenPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_BET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SELF_DESTRUCT_TIMER\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"activeBets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"betsAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blank\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentLPGen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentTxPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"m_LP_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"genNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"LP_token_amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"m_userData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"account_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bet_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"heads_or_tails\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"ticket_num\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"processingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"queryId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalLiabilities\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"userQueryId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Daniel/Desktop/Solidity 201/Coin Flip/contracts/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Daniel/Desktop/Solidity 201/Coin Flip/contracts/Proxy.sol\":{\"keccak256\":\"0x38ca428deaea405788e403fbad41dd1735725e135f8959730b24e59c80722bfa\",\"urls\":[\"bzz-raw://b20efbcf1584427ba89939ca6a3ca544819ae1d3db13d1f4fe8335387f1df414\",\"dweb:/ipfs/Qmbu9vCqvJ8ZLgqai1MfU9fDo9oa7fJ4Kkj4rDqr4dGRy4\"]},\"/C/Users/Daniel/Desktop/Solidity 201/Coin Flip/contracts/Storage.sol\":{\"keccak256\":\"0x9406df450842de9534f4785d62ff34e134419582514552fd2c0a3fd4cb343924\",\"urls\":[\"bzz-raw://231e5b976012f7c656686d9771d2ba076d5c4c3a770c1f2ff24ff4f613104ab7\",\"dweb:/ipfs/QmYS9GDodJyUi5FVoeoFW4nZgf5XNsoLAi7W8AdGrDvPos\"]}},\"version\":1}",
  "bytecode": "0x60806040526611c37937e080006009556000801b600b5534801561002257600080fd5b50604051610a0d380380610a0d8339818101604052602081101561004557600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006003819055506001600660016101000a81548160ff021916908315150217905550662386f26fc10000600481905550671bc16d674ec800006005819055506000600660006101000a81548160ff0219169083151502179055506000600c819055506000600d8190555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506108bb806101526000396000f3fe6080604052600436106101145760003560e01c806375efeb81116100a0578063a77fd3eb11610064578063a77fd3eb146105c7578063ce5aec66146105f6578063de1881a814610621578063e66632fb1461064c578063f73579a91461067757610114565b806375efeb81146104985780637e95b523146104c357806381bf4718146104ee5780638b7afe2e146105455780638da5cb5b1461057057610114565b80634672f57e116100e75780634672f57e146102d957806353221017146103455780636540742f14610374578063738763bc1461039f57806374ca6cd31461041a57610114565b8063032ee405146102075780630900f01014610232578063343861df146102835780633f1be4d4146102ae575b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561019757600080fd5b60606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509050600080825160208401855af43d604051816000823e8260008114610203578282f35b8282fd5b34801561021357600080fd5b5061021c6106a2565b6040518082815260200191505060405180910390f35b34801561023e57600080fd5b506102816004803603602081101561025557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a8565b005b34801561028f57600080fd5b50610298610745565b6040518082815260200191505060405180910390f35b3480156102ba57600080fd5b506102c361074b565b6040518082815260200191505060405180910390f35b3480156102e557600080fd5b50610328600480360360208110156102fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610751565b604051808381526020018281526020019250505060405180910390f35b34801561035157600080fd5b5061035a610775565b604051808215151515815260200191505060405180910390f35b34801561038057600080fd5b50610389610788565b6040518082815260200191505060405180910390f35b3480156103ab57600080fd5b506103d8600480360360208110156103c257600080fd5b810190808035906020019092919050505061078e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042657600080fd5b506104696004803603602081101561043d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107c1565b604051808581526020018481526020018315151515815260200182815260200194505050505060405180910390f35b3480156104a457600080fd5b506104ad6107fe565b6040518082815260200191505060405180910390f35b3480156104cf57600080fd5b506104d8610804565b6040518082815260200191505060405180910390f35b3480156104fa57600080fd5b5061050361080a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561055157600080fd5b5061055a610830565b6040518082815260200191505060405180910390f35b34801561057c57600080fd5b50610585610836565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105d357600080fd5b506105dc61085b565b604051808215151515815260200191505060405180910390f35b34801561060257600080fd5b5061060b61086e565b6040518082815260200191505060405180910390f35b34801561062d57600080fd5b50610636610874565b6040518082815260200191505060405180910390f35b34801561065857600080fd5b5061066161087a565b6040518082815260200191505060405180910390f35b34801561068357600080fd5b5061068c610880565b6040518082815260200191505060405180910390f35b60035481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070157600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d5481565b600a5481565b60166020528060005260406000206000915090508060000154908060010154905082565b600660009054906101000a900460ff1681565b60045481565b60146020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60156020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16908060030154905084565b60085481565b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660019054906101000a900460ff1681565b600c5481565b60095481565b600b5481565b6007548156fea265627a7a723158202e35da8b236853fa44907ddb30e7dec5ad4d342a6ea3499efd493881b5c98ce764736f6c634300050c0032",
  "deployedBytecode": "0x6080604052600436106101145760003560e01c806375efeb81116100a0578063a77fd3eb11610064578063a77fd3eb146105c7578063ce5aec66146105f6578063de1881a814610621578063e66632fb1461064c578063f73579a91461067757610114565b806375efeb81146104985780637e95b523146104c357806381bf4718146104ee5780638b7afe2e146105455780638da5cb5b1461057057610114565b80634672f57e116100e75780634672f57e146102d957806353221017146103455780636540742f14610374578063738763bc1461039f57806374ca6cd31461041a57610114565b8063032ee405146102075780630900f01014610232578063343861df146102835780633f1be4d4146102ae575b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561019757600080fd5b60606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509050600080825160208401855af43d604051816000823e8260008114610203578282f35b8282fd5b34801561021357600080fd5b5061021c6106a2565b6040518082815260200191505060405180910390f35b34801561023e57600080fd5b506102816004803603602081101561025557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a8565b005b34801561028f57600080fd5b50610298610745565b6040518082815260200191505060405180910390f35b3480156102ba57600080fd5b506102c361074b565b6040518082815260200191505060405180910390f35b3480156102e557600080fd5b50610328600480360360208110156102fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610751565b604051808381526020018281526020019250505060405180910390f35b34801561035157600080fd5b5061035a610775565b604051808215151515815260200191505060405180910390f35b34801561038057600080fd5b50610389610788565b6040518082815260200191505060405180910390f35b3480156103ab57600080fd5b506103d8600480360360208110156103c257600080fd5b810190808035906020019092919050505061078e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042657600080fd5b506104696004803603602081101561043d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107c1565b604051808581526020018481526020018315151515815260200182815260200194505050505060405180910390f35b3480156104a457600080fd5b506104ad6107fe565b6040518082815260200191505060405180910390f35b3480156104cf57600080fd5b506104d8610804565b6040518082815260200191505060405180910390f35b3480156104fa57600080fd5b5061050361080a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561055157600080fd5b5061055a610830565b6040518082815260200191505060405180910390f35b34801561057c57600080fd5b50610585610836565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105d357600080fd5b506105dc61085b565b604051808215151515815260200191505060405180910390f35b34801561060257600080fd5b5061060b61086e565b6040518082815260200191505060405180910390f35b34801561062d57600080fd5b50610636610874565b6040518082815260200191505060405180910390f35b34801561065857600080fd5b5061066161087a565b6040518082815260200191505060405180910390f35b34801561068357600080fd5b5061068c610880565b6040518082815260200191505060405180910390f35b60035481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070157600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d5481565b600a5481565b60166020528060005260406000206000915090508060000154908060010154905082565b600660009054906101000a900460ff1681565b60045481565b60146020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60156020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16908060030154905084565b60085481565b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660019054906101000a900460ff1681565b600c5481565b60095481565b600b5481565b6007548156fea265627a7a723158202e35da8b236853fa44907ddb30e7dec5ad4d342a6ea3499efd493881b5c98ce764736f6c634300050c0032",
  "sourceMap": "55:706:4:-;;;718:16:6;687:47;;869:66;846:89;;;;88:90:4;8:9:-1;5:2;;;30:1;27;20:12;5:2;88:90:4;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;88:90:4;;;;;;;;;;;;;;;;2680:10:6;2672:5;;:18;;;;;;;;;;;;;;;;;;2714:1;2701:10;:14;;;;2740:4;2726:11;;:18;;;;;;;;;;;;;;;;;;2765:17;2755:7;:27;;;;2803:19;2793:7;:29;;;;2855:5;2833:19;;:27;;;;;;;;;;;;;;;;;;2885:1;2871:11;:15;;;;2912:1;2897:12;:16;;;;157:15:4;140:14;;:32;;;;;;;;;;;;;;;;;;88:90;55:706;;;;;;",
  "deployedSourceMap": "55:706:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;321:23;347:14;;;;;;;;;;;321:40;;402:1;376:28;;:14;;;;;;;;;;;:28;;;;368:37;;;;;;412:17;432:8;;412:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;412:28:4;;;;;;;;549:1;546;539:4;533:11;526:4;520;516:15;499;494:3;481:71;572:14;611:4;605:11;647:4;644:1;639:3;624:28;667:6;686:1;681:26;;;;736:4;731:3;724:17;681:26;701:4;696:3;689:17;231:25:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;231:25:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;184:95:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;184:95:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;184:95:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;977:27:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;977:27:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;799:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;799:22:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2095:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2095:51:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2095:51:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;321:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;321:31:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;263:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;263:22:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1932:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1932:46:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1932:46:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2042;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2042:46:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2042:46:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;590:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;590:29:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;292:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:22:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;81:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;81:29:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;194:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;194:30:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;54:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;54:20:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;359:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;359:23:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;944:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;944:26:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;687:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;687:47:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;846:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;846:89:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;391:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;391:31:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;231:25;;;;:::o;184:95:4:-;2475:5:6;;;;;;;;;;;2461:19;;:10;:19;;;2453:28;;;;;;262:11:4;245:14;;:28;;;;;;;;;;;;;;;;;;184:95;:::o;977:27:6:-;;;;:::o;799:22::-;;;;:::o;2095:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;321:31::-;;;;;;;;;;;;;:::o;263:22::-;;;;:::o;1932:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;2042:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;590:29::-;;;;:::o;292:22::-;;;;:::o;81:29::-;;;;;;;;;;;;;:::o;194:30::-;;;;:::o;54:20::-;;;;;;;;;;;;;:::o;359:23::-;;;;;;;;;;;;;:::o;944:26::-;;;;:::o;687:47::-;;;;:::o;846:89::-;;;;:::o;391:31::-;;;;:::o",
  "source": "import \"./Storage.sol\";\r\n\r\npragma solidity ^0.5.12;\r\n\r\ncontract Proxy is Storage {\r\n\r\n  constructor (address _currentAddress) public {\r\n    currentAddress = _currentAddress;\r\n  }\r\n\r\n  function upgrade(address _newAddress) public onlyOwner{\r\n    currentAddress = _newAddress;\r\n  }\r\n\r\n  function () payable external {\r\n    address _implementation = currentAddress;\r\n    require(currentAddress != address(0));\r\n    bytes memory data = msg.data;\r\n\r\n    assembly {\r\n      let result := delegatecall(gas, _implementation, add(data, 0x20), mload(data), 0, 0 )\r\n      let size := returndatasize\r\n      let ptr := mload(0x40)\r\n      returndatacopy(ptr, 0, size)\r\n      switch result\r\n      case 0 {revert(ptr, size)}\r\n      default {return(ptr, size)}\r\n    }\r\n  }\r\n\r\n\r\n}\r\n",
  "sourcePath": "C:/Users/Daniel/Desktop/Solidity 201/Coin Flip/contracts/Proxy.sol",
  "ast": {
    "absolutePath": "/C/Users/Daniel/Desktop/Solidity 201/Coin Flip/contracts/Proxy.sol",
    "exportedSymbols": {
      "Proxy": [
        7298
      ]
    },
    "id": 7299,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/C/Users/Daniel/Desktop/Solidity 201/Coin Flip/contracts/Storage.sol",
        "file": "./Storage.sol",
        "id": 7250,
        "nodeType": "ImportDirective",
        "scope": 7299,
        "sourceUnit": 7654,
        "src": "0:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7251,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "27:24:4"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7252,
              "name": "Storage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7653,
              "src": "73:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Storage_$7653",
                "typeString": "contract Storage"
              }
            },
            "id": 7253,
            "nodeType": "InheritanceSpecifier",
            "src": "73:7:4"
          }
        ],
        "contractDependencies": [
          7653
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7298,
        "linearizedBaseContracts": [
          7298,
          7653
        ],
        "name": "Proxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7262,
              "nodeType": "Block",
              "src": "133:45:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7258,
                      "name": "currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7491,
                      "src": "140:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7259,
                      "name": "_currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7255,
                      "src": "157:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "140:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7261,
                  "nodeType": "ExpressionStatement",
                  "src": "140:32:4"
                }
              ]
            },
            "documentation": null,
            "id": 7263,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7255,
                  "name": "_currentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7263,
                  "src": "101:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "101:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "100:25:4"
            },
            "returnParameters": {
              "id": 7257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "133:0:4"
            },
            "scope": 7298,
            "src": "88:90:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7274,
              "nodeType": "Block",
              "src": "238:41:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7270,
                      "name": "currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7491,
                      "src": "245:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7271,
                      "name": "_newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7265,
                      "src": "262:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "245:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7273,
                  "nodeType": "ExpressionStatement",
                  "src": "245:28:4"
                }
              ]
            },
            "documentation": null,
            "id": 7275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7268,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7267,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7605,
                  "src": "229:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "229:9:4"
              }
            ],
            "name": "upgrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7265,
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7275,
                  "src": "201:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "200:21:4"
            },
            "returnParameters": {
              "id": 7269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "238:0:4"
            },
            "scope": 7298,
            "src": "184:95:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7296,
              "nodeType": "Block",
              "src": "314:440:4",
              "statements": [
                {
                  "assignments": [
                    7279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7279,
                      "name": "_implementation",
                      "nodeType": "VariableDeclaration",
                      "scope": 7296,
                      "src": "321:23:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7278,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "321:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7281,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 7280,
                    "name": "currentAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7491,
                    "src": "347:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "321:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7283,
                          "name": "currentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7491,
                          "src": "376:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "402:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "394:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "394:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "376:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14168,
                        14169
                      ],
                      "referencedDeclaration": 14168,
                      "src": "368:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "368:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7289,
                  "nodeType": "ExpressionStatement",
                  "src": "368:37:4"
                },
                {
                  "assignments": [
                    7291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7291,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 7296,
                      "src": "412:17:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 7290,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "412:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7294,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7292,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14165,
                      "src": "432:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 7293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "432:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "412:28:4"
                },
                {
                  "externalReferences": [
                    {
                      "data": {
                        "declaration": 7291,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "539:4:4",
                        "valueSize": 1
                      }
                    },
                    {
                      "data": {
                        "declaration": 7291,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "520:4:4",
                        "valueSize": 1
                      }
                    },
                    {
                      "_implementation": {
                        "declaration": 7279,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "499:15:4",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 7295,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let result := delegatecall(gas(), _implementation, add(data, 0x20), mload(data), 0, 0)\n    let size := returndatasize()\n    let ptr := mload(0x40)\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 { revert(ptr, size) }\n    default { return(ptr, size) }\n}",
                  "src": "449:300:4"
                }
              ]
            },
            "documentation": null,
            "id": 7297,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "294:2:4"
            },
            "returnParameters": {
              "id": 7277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:0:4"
            },
            "scope": 7298,
            "src": "285:469:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7299,
        "src": "55:706:4"
      }
    ],
    "src": "0:763:4"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Daniel/Desktop/Solidity 201/Coin Flip/contracts/Proxy.sol",
    "exportedSymbols": {
      "Proxy": [
        7298
      ]
    },
    "id": 7299,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/C/Users/Daniel/Desktop/Solidity 201/Coin Flip/contracts/Storage.sol",
        "file": "./Storage.sol",
        "id": 7250,
        "nodeType": "ImportDirective",
        "scope": 7299,
        "sourceUnit": 7654,
        "src": "0:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7251,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "27:24:4"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7252,
              "name": "Storage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7653,
              "src": "73:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Storage_$7653",
                "typeString": "contract Storage"
              }
            },
            "id": 7253,
            "nodeType": "InheritanceSpecifier",
            "src": "73:7:4"
          }
        ],
        "contractDependencies": [
          7653
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7298,
        "linearizedBaseContracts": [
          7298,
          7653
        ],
        "name": "Proxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7262,
              "nodeType": "Block",
              "src": "133:45:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7258,
                      "name": "currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7491,
                      "src": "140:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7259,
                      "name": "_currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7255,
                      "src": "157:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "140:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7261,
                  "nodeType": "ExpressionStatement",
                  "src": "140:32:4"
                }
              ]
            },
            "documentation": null,
            "id": 7263,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7255,
                  "name": "_currentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7263,
                  "src": "101:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "101:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "100:25:4"
            },
            "returnParameters": {
              "id": 7257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "133:0:4"
            },
            "scope": 7298,
            "src": "88:90:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7274,
              "nodeType": "Block",
              "src": "238:41:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7270,
                      "name": "currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7491,
                      "src": "245:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7271,
                      "name": "_newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7265,
                      "src": "262:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "245:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7273,
                  "nodeType": "ExpressionStatement",
                  "src": "245:28:4"
                }
              ]
            },
            "documentation": null,
            "id": 7275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7268,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7267,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7605,
                  "src": "229:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "229:9:4"
              }
            ],
            "name": "upgrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7265,
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7275,
                  "src": "201:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "200:21:4"
            },
            "returnParameters": {
              "id": 7269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "238:0:4"
            },
            "scope": 7298,
            "src": "184:95:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7296,
              "nodeType": "Block",
              "src": "314:440:4",
              "statements": [
                {
                  "assignments": [
                    7279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7279,
                      "name": "_implementation",
                      "nodeType": "VariableDeclaration",
                      "scope": 7296,
                      "src": "321:23:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7278,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "321:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7281,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 7280,
                    "name": "currentAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7491,
                    "src": "347:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "321:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7283,
                          "name": "currentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7491,
                          "src": "376:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "402:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "394:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "394:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "376:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14168,
                        14169
                      ],
                      "referencedDeclaration": 14168,
                      "src": "368:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "368:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7289,
                  "nodeType": "ExpressionStatement",
                  "src": "368:37:4"
                },
                {
                  "assignments": [
                    7291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7291,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 7296,
                      "src": "412:17:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 7290,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "412:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7294,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7292,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14165,
                      "src": "432:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 7293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "432:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "412:28:4"
                },
                {
                  "externalReferences": [
                    {
                      "data": {
                        "declaration": 7291,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "539:4:4",
                        "valueSize": 1
                      }
                    },
                    {
                      "data": {
                        "declaration": 7291,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "520:4:4",
                        "valueSize": 1
                      }
                    },
                    {
                      "_implementation": {
                        "declaration": 7279,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "499:15:4",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 7295,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let result := delegatecall(gas(), _implementation, add(data, 0x20), mload(data), 0, 0)\n    let size := returndatasize()\n    let ptr := mload(0x40)\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 { revert(ptr, size) }\n    default { return(ptr, size) }\n}",
                  "src": "449:300:4"
                }
              ]
            },
            "documentation": null,
            "id": 7297,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "294:2:4"
            },
            "returnParameters": {
              "id": 7277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:0:4"
            },
            "scope": 7298,
            "src": "285:469:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7299,
        "src": "55:706:4"
      }
    ],
    "src": "0:763:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-11-22T03:49:43.740Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}